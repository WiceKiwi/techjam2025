# ==== DATA ====
data:
  train_path: "datasets/splits/train.jsonl"
  val_path:   "datasets/splits/val.jsonl"
  test_path:  "datasets/splits/test.jsonl"

schema:
  id_key: "review_id"
  group_key: "gmap_id"

# Which targets to train (continuous). Keep these as silver scores in [0,1]
targets:
  - ads_promo
  - spam_low_quality
  - irrelevant
  - rant_no_visit
  - relevancy_score
  - visit_likelihood

# Feature selection
features:
  mode: "auto_numeric"        # "auto_numeric" or "explicit"
  include: []                 # when mode="explicit", list features here
  exclude:
    - review_id
    - gmap_id
    - user_id
    - time
    - text
    - pics
    - resp
    - name
    - category

# Thresholding for binary metrics
thresholding:
  strategy: "auto_f1"         # "auto_f1" | "fixed"
  fixed:
    ads_promo: 0.50
    spam_low_quality: 0.50
    irrelevant: 0.50
    rant_no_visit: 0.50
    relevancy_score: 0.50
    visit_likelihood: 0.50

# Model config (scikit-learn HistGradientBoostingRegressor)
model:
  type: "hgb"                 # only "hgb" supported in this quick pipeline
  params:
    learning_rate: 0.08
    max_depth: 6
    max_bins: 255
    l2_regularization: 0.0
    early_stopping: "auto"
    random_state: 16

train:
  n_jobs: 0                   # hgb is single-threaded internally; leave 0
  drop_na_targets: true       # drop rows with NaN in target
  seed: 16

# Outputs
output:
  dir: "artifacts/models"     # models + metrics + thresholds
  preds_val: "artifacts/preds/val_preds.jsonl"
  preds_test: "artifacts/preds/test_preds.jsonl"
  metrics_json: "artifacts/metrics/metrics.json"
  thresholds_json: "artifacts/metrics/thresholds.json"
